---
Title: 2D Unity
date: 2023-10-24 12:00:00
---
Practicing different forms of AI in a 2D Unity Environment.

This started with [Conway's Game of Life](https://blog.yarsalabs.com/conways-game-of-life-in-unity/) and now working on a [Boids](https://en.wikipedia.org/wiki/Boids) algorithm from old Uni exercises.

Conway's is currently working, though it does start to throttle after adding 150 x 150 tiles.

I have just implemented the fleeing behavior for the Boids. The hope is to either add some fishy sprites and put them in some sort of fish tank.

Finally, I will work on an A* algorithm to recreate the hedge maze from The Legend of Zelda: Ocarina of Time.

Lots to do.

[GitHub](https://github.com/ConnorY97/2DUnity.git)

|Commits|Message|
|-------|-------|
|[0](https://github.com/ConnorY97/2DUnity/commit/b6c554c7516ab72d8a31b61eda641cc4079f5bf6)|Unity initial upload<br/>A testing project for 2D coding<br/>Implemented<br/>Conways Game of life<br/>Working on<br/>Boids<br/>Want to do<br/>A*|
|[1](https://github.com/ConnorY97/2DUnity/commit/c3d40d8aad6795ac9d2b2f55387f89a98e4dd2a0)|Repo fixing<br/>Cleaning up the repo|
|[2](https://github.com/ConnorY97/2DUnity/commit/a86175904e7ae0df9c031f2b9453f3aa24e21867)|It seems to work?<br/>Good progress|
|[3](https://github.com/ConnorY97/2DUnity/commit/6443394f0745d35c4e9da12c513bc4f2c99f108a)|Currently working on fleeing from multiple obstacles|
|[4](https://github.com/ConnorY97/2DUnity/commit/2cac0dde1c16134ed540157e70dc93353041bac1)|Code clean up and basic flee behaviour|
|[5](https://github.com/ConnorY97/2DUnity/commit/f97cd0f42bad0c4ada4684837a41112165bef55d)|Fixed the fleeing behavior<br/>Issue Not correctly updating the closest obstacle so the flee behavior looked like it was working but it was completely broken.<br/>Also implemented very janky player movement|
|[6](https://github.com/ConnorY97/2DUnity/commit/b01d7293124ca0b70aabdfbc117d3202617e4f85)|Lots of clean up.<br/>Realized I should not be using a global var from the Game Manager for the weights of each of the behaviors. Rather I could make it a member var of the base class and require all inheritors to use it in their constructors. This also Allows for better testing of weights in editor without having to open the code.<br/>Started work on the separation behavior which is making everything freak out|
|[7](https://github.com/ConnorY97/2DUnity/commit/d7f0f4e3fd0cb6986b53a7713bb509c7de07ddac)|Added UpdateWeight function which allows for changing weight values during runtime for better behavior control and testing|
|[8](https://github.com/ConnorY97/2DUnity/commit/b3a46229f708b78f9e038b601bc01ff7bd0800fb)|Split the Game Manager into Boids and Conways managers so that I don't have to comment them out when I wanna swap. <br/>Looking into moving obstibles away from being boids and rather attached to GameObjects. This would allow for more interesting shapes to be used for the seekers to avoid.|
|[9](https://github.com/ConnorY97/2DUnity/commit/e9df9ac85b1f324b20febeed68317ca41b18c42d)|Alignment<br/>Implementation of alignment|